void noReturn() { }
int aReturn() { return 1; }
void go() {

	int x = 1;
	boolean b = true;
	
	// the following six are legal assert statements
	assert(x == 1);
	assert(b);
	assert true;
	assert(x == 1) : x;
	assert(x == 1) : aReturn();
	assert(x == 1) : new ValidAssert();
	
	// the following six are ILLEGAL assert statements
	assert(x = 1); // none of these are booleans
	assert(x);
	assert 0;
	assert(x == 1) : ; // none of these return a value
	assert(x == 1) : noReturn();
	assert(x == 1) : ValidAssert va;
}
-----------------------------------------------------------------
If you want to use assertions, you have to think first about how to compile with assertions in your code, and then about how to run with assertions enabled. Both require version 1.4 or greater.
-----------------------------------------------------------------
You can use "assert" as a keyword or as an identifier, but not both.
-----------------------------------------------------------------
to compile code with assertions in java 1.4 compiler, "-source 1.4" should be explicitly specified. This is an assurance that the code conforms to java 1.4 standard which is assertion aware. eg.
javac -source 1.4 com/geeksanonymous/TestClass.java

in java 1.5 or later, compilers are assertion aware by default and hence "assert" is assumed to be a keyword by default. to compile a code which has "assert" as identifier, "-source 1.3<or earlier> should be used in such compilers to emphasize that code is not assertion aware. compilation will proceed with warnings in this case.

"-source 1.5" and "-source 1.6" are same as "-source 5" and "-source 6".
-----------------------------------------------------------------
when a java program is launched, assertions are disabled by default.

switch "-ea" or "-enableassertions" is used to enable assertions in general.
switch "-da" or "-disableassertions" is used to disable assertions in general.
switches "-esa" and "-dsa" are used to enable and disable assertions in sustem classes.
-----------------------------------------------------------------
when the above switches are used without arguments, it enables or disables assertions in all classes, except for the system classes.

when a class name is used as argument to a switch, it enables or disables assertions in the class specified.

when package name is used as argument, it enables or disables assertions in the package specified, and any packages below this package in the same directory hierarchy

eg. java -ea -da:com.geeksanonymous.Foo
above command enables assertions in general, but disables them in the class com.geeksanonymous.Foo.

eg. java -ea -da:com.geeksanonymous...
above command enables assertions in general, but disables them in the package com.geeksanonymous, and all of its subpackages.
-----------------------------------------------------------------
-assertions are most widely used to validate arguments to a private method or to assert assumptions that should never happen in public methods.

-assertions should not be used to validate commandline arguments to a public method. also assert expressions should not be having any side effects.
-----------------------------------------------------------------